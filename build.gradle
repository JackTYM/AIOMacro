plugins {
    id "gg.essential.loom" version "0.10.0.4"
    id "java"
    id "gg.essential.defaults" version "0.1.11"
}
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
loom {
    launchConfigs {
        client {
            arg("--tweakClass", "gg.essential.loader.stage0.EssentialSetupTweaker")
        }
    }
}

version = "1.7.1-release"
group = "me.jacktym.aiom"

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
    maven { url "https://repo.sk1er.club/repository/maven-releases/" }
}

configurations {
    shade
    implementation.extendsFrom(shade)
}


dependencies {
    shade("gg.essential:loader-launchwrapper:1.1.3")
    compileOnly("gg.essential:essential-1.8.9-forge:1788")
}
jar.manifest.attributes("TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker")
jar.from(configurations.shade.collect { it.isDirectory() ? it : zipTree(it) }) {
    exclude 'club.sk1er.vigilance.example.ExampleMod', 'dummyThing'
    def i = 0
    filesMatching("META-INF/NOTICE*") { name = "$name.${i++}" }
    filesMatching("META-INF/LICENSE*") { name = "$name.${i++}" }
    filesMatching("META-INF/mods.toml") { name = "$name.${i++}" }
    filesMatching("LICENSE*") { name = "$name.${i++}" }
}
jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "FMLCorePluginContainsFMLMod": true,
            "FMLCorePlugin": "me.jacktym.aiomacro.FMLLoadingPlugin",
            "ForceLoadAsMod": true,
            "ModSide": "CLIENT",
            "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
            "TweakOrder": "0"
    )

    enabled = false
}


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.property("minecraft.version")
    from(sourceSets.main.resources.srcDirs) {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        filesMatching("mcmod.info") {
            expand 'version': project.version, 'mcversion': project.property("minecraft.version")
        }

    }
}

sourceSets {
    main { output.resourcesDir = java.outputDir }
}
